From 0c5d3e97bd4eb13e9a41382074f2c3aa47faf7fd Mon Sep 17 00:00:00 2001
From: SATYAM KUMAR <satyamvats5@gmail.com>
Date: Thu, 13 Jul 2017 23:25:58 +0530
Subject: [PATCH] error_handling: Gives error message.

Most of the C library function that fails set
the errno variable to indicate what the error was.
perror() looks at the global errno variable and
will print a descriptive error message for it.

fixes : https://github.com/BytesClub/chalk/issues/12

Signed-off-by: SATYAM KUMAR <satyamvats5@gmail.com>
---
 chalk.c | 21 +++++++++++++++++----
 1 file changed, 17 insertions(+), 4 deletions(-)

diff --git a/chalk.c b/chalk.c
index 26077ec..f03e389 100644
--- a/chalk.c
+++ b/chalk.c
@@ -3,17 +3,26 @@
 #include <termios.h> 
 #include <stdio.h>
 #include <ctype.h>
+#include <errno.h>
 
 struct termios orig_termios;
 
+void die(const char *S ) {
+	perror(S);
+	exit(1);
+}
 void disableRawMode()
 {
-        tcsetattr(STDIN_FILENO,TCSAFLUSH,&orig_termios);
+        if(tcsetattr(STDIN_FILENO,TCSAFLUSH,&orig_termios)==-1) {
+		die("tcsetattr");
+	}
 }
 
 void enableRawMode()
 {
-        tcgetattr(STDIN_FILENO, &orig_termios);
+        if(tcgetattr(STDIN_FILENO, &orig_termios)==-1) {
+		die("tcgetattr");
+	}
         atexit(disableRawMode);
 
         struct termios raw=orig_termios; 
@@ -24,7 +33,9 @@ void enableRawMode()
         raw.c_cc[VMIN] = 0; /* Return each byte, or 0 on timeout */
         raw.c_cc[VTIME] = 1; /* 100 ms timeout */
 
-        tcsetattr(STDIN_FILENO, TCSAFLUSH, &raw);
+        if(tcsetattr(STDIN_FILENO, TCSAFLUSH, &raw)==-1) {
+		die("tcsetattr");
+	}
 }
 
 int main()
@@ -33,7 +44,9 @@ int main()
 
         while(1) {
                 char c = '\0';
-                read(STDIN_FILENO, &c, 1);
+                if(read(STDIN_FILENO, &c, 1)==-1 &&  errno != EAGAIN ) {
+			die("read");
+		}
                 if(iscntrl(c)) {
                         printf("%d\r\n",c);
                 } else {
-- 
2.7.4

